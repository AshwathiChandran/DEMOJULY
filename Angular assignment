
class Astronaut {
    constructor(massKg, name) {
        this.massKg = massKg;
        this.name = name;
    }
}

class Cargo {
    constructor(massKg, material) {
        this.massKg = massKg;
        this.material = material;
    }
}
class Rocket {
    constructor(name, totalCapacityKg) {
        this.cargoItems = [];
        this.astronauts = [];
        this.name = name;
        this.totalCapacityKg = totalCapacityKg;
    }
    sum(items) {
        return items.reduce((total, item) => total + item.massKg, 0);
    }
    MassKg() {
        return this.sumMass([...this.cargoItems, ...this.astronauts]);
    }
    Add(item) {
        return this.currentMassKg() + item.massKg <= this.totalCapacityKg;
    }
    addCargo(cargo) {
        if (this.canAdd(cargo)) {
            this.cargoItems.push(cargo);
            return true;
        }
        else {
            return false;
        }
    }
    addAstronaut(astronaut) {
        if (this.canAdd(astronaut)) {
            this.astronauts.push(astronaut);
            return true;
        }
        else {
            return false;
        }
    }
}
// Create a rocket and run a simulation
const rocket = new Rocket("Falcon 9", 20000);
const astronaut1 = new Astronaut(750000000, "John");
const astronaut2 = new Astronaut(68000, "Jane");
const cargo1 = new Cargo(5000, "Satellites");
const cargo2 = new Cargo(10000, "Supplies");
if (rocket.addAstronaut(astronaut1)) {
    console.log(`TRUE`);
}
else {
    console.log(`FALSE`);
}
if (rocket.addCargo(cargo1)) {
    console.log(`TRUE`);
}
else {
    console.log(`FALSE`);
}
if (rocket.addAstronaut(astronaut2)) {
    console.log(`TRUE`);
}
else {
    console.log(`FALSE`);
}
if (rocket.addCargo(cargo2)) {
    console.log(`TRUE`);
}
else {
    console.log(`FALSE`);
}
console.log(`Total mass on ${rocket.name}: ${rocket.MassKg()} kg.`);
